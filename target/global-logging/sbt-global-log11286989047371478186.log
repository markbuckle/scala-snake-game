[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\barkm\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\barkm\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 23.0.1)
[debug] Load.defaultLoad until apply took 123.5695ms
[debug]           Load.loadUnit: plugins took 160.6416ms
[debug]           Load.loadUnit: defsScala took 0.6807ms
[debug] [Loading] Scanning directory C:\Users\Marks-Desktop\Coding\scala-snake-game\project
[debug]             Load.loadUnit: mkEval took 11.5271ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.0938 ms
[info] loading settings for project scala-snake-game-build from idea2.sbt ...
[debug]               Load.resolveProject(scala-snake-game-build) took 83.4012ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-snake-game-build, base: C:\Users\Marks-Desktop\Coding\scala-snake-game\project, plugins: List(<none>))) took 124.6825ms
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game\project, returning: (scala-snake-game-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 433.7238ms
[debug]           Load.loadUnit: cleanEvalClasses took 23.9969ms
[debug]         Load.loadUnit(file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/project/, ...) took 633.8618ms
[debug]       Load.apply: load took 910.166ms
[debug]       Load.apply: resolveProjects took 6.6661ms
[debug]       Load.apply: finalTransforms took 73.3378ms
[debug]       Load.apply: config.delegates took 15.832ms
[debug]       Load.apply: Def.make(settings)... took 488.8376ms
[debug]       Load.apply: structureIndex took 72.4701ms
[debug]       Load.apply: mkStreams took 1.5308ms
[info] loading project definition from C:\Users\Marks-Desktop\Coding\scala-snake-game\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2929.1574ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\Marks-Desktop\Coding\scala-snake-game
[debug]       Load.loadUnit: mkEval took 0.1922ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.3354 ms
[info] loading settings for project scala-snake-game from build.sbt ...
[debug]         Load.resolveProject(scala-snake-game) took 32.6313ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-snake-game, base: C:\Users\Marks-Desktop\Coding\scala-snake-game, plugins: List(<none>))) took 36.5909ms
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game, returning: (scala-snake-game)
[debug]     Load.loadUnit: loadedProjectsRaw took 2238.4611ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.8397ms
[debug]   Load.loadUnit(file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/, ...) took 5184.8802ms
[debug] Load.apply: load took 5213.3437ms
[debug] Load.apply: resolveProjects took 0.2564ms
[debug] Load.apply: finalTransforms took 26.623ms
[debug] Load.apply: config.delegates took 0.5767ms
[debug] Load.apply: Def.make(settings)... took 65.8269ms
[debug] Load.apply: structureIndex took 16.0768ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to scalafx-playground (in build file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
