[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\barkm\AppData\Local\Temp\idea5.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\barkm\AppData\Local\Temp\idea5.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 23.0.1)
[debug] Load.defaultLoad until apply took 105.7606ms
[debug]           Load.loadUnit: plugins took 73.249ms
[debug]           Load.loadUnit: defsScala took 0.2136ms
[debug] [Loading] Scanning directory C:\Users\Marks-Desktop\Coding\scala-snake-game\project
[debug]             Load.loadUnit: mkEval took 6.0128ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.1745 ms
[info] loading settings for project scala-snake-game-build from idea5.sbt ...
[debug]               Load.resolveProject(scala-snake-game-build) took 31.2634ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-snake-game-build, base: C:\Users\Marks-Desktop\Coding\scala-snake-game\project, plugins: List(<none>))) took 54.2642ms
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game\project, returning: (scala-snake-game-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 208.4503ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.8753ms
[debug]         Load.loadUnit(file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/project/, ...) took 293.3096ms
[debug]       Load.apply: load took 389.1757ms
[debug]       Load.apply: resolveProjects took 4.0197ms
[debug]       Load.apply: finalTransforms took 84.0779ms
[debug]       Load.apply: config.delegates took 7.8468ms
[debug]       Load.apply: Def.make(settings)... took 414.1434ms
[debug]       Load.apply: structureIndex took 90.8005ms
[debug]       Load.apply: mkStreams took 2.6089ms
[info] loading project definition from C:\Users\Marks-Desktop\Coding\scala-snake-game\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1705.9209ms
[debug]     Load.loadUnit: defsScala took 0.0083ms
[debug] [Loading] Scanning directory C:\Users\Marks-Desktop\Coding\scala-snake-game
[debug]       Load.loadUnit: mkEval took 0.1773ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5297 ms
[info] loading settings for project scala-snake-game from build.sbt ...
[debug]         Load.resolveProject(scala-snake-game) took 40.3812ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-snake-game, base: C:\Users\Marks-Desktop\Coding\scala-snake-game, plugins: List(<none>))) took 43.6733ms
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game, returning: (scala-snake-game)
[debug]     Load.loadUnit: loadedProjectsRaw took 105.0788ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.2515ms
[debug]   Load.loadUnit(file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/, ...) took 1818.3872ms
[debug] Load.apply: load took 1843.599ms
[debug] Load.apply: resolveProjects took 0.1066ms
[debug] Load.apply: finalTransforms took 37.6074ms
[debug] Load.apply: config.delegates took 0.9163ms
[debug] Load.apply: Def.make(settings)... took 68.9477ms
[debug] Load.apply: structureIndex took 18.1734ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to scalafx-playground (in build file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
