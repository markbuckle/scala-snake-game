[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\barkm\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\barkm\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 23.0.1)
[debug] Load.defaultLoad until apply took 87.1656ms
[debug]           Load.loadUnit: plugins took 70.8606ms
[debug]           Load.loadUnit: defsScala took 0.2648ms
[debug] [Loading] Scanning directory C:\Users\Marks-Desktop\Coding\scala-snake-game\project
[debug]             Load.loadUnit: mkEval took 4.8503ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.6672 ms
[info] loading settings for project scala-snake-game-build from idea11.sbt ...
[debug]               Load.resolveProject(scala-snake-game-build) took 27.7969ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-snake-game-build, base: C:\Users\Marks-Desktop\Coding\scala-snake-game\project, plugins: List(<none>))) took 49.9009ms
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game\project, returning: (scala-snake-game-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 200.1674ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.6773ms
[debug]         Load.loadUnit(file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/project/, ...) took 286.8219ms
[debug]       Load.apply: load took 415.5543ms
[debug]       Load.apply: resolveProjects took 5.1444ms
[debug]       Load.apply: finalTransforms took 40.3654ms
[debug]       Load.apply: config.delegates took 9.7993ms
[debug]       Load.apply: Def.make(settings)... took 407.6693ms
[debug]       Load.apply: structureIndex took 79.2518ms
[debug]       Load.apply: mkStreams took 1.4148ms
[info] loading project definition from C:\Users\Marks-Desktop\Coding\scala-snake-game\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1665.6337ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\Marks-Desktop\Coding\scala-snake-game
[debug]       Load.loadUnit: mkEval took 0.1579ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2261 ms
[info] loading settings for project scala-snake-game from build.sbt ...
[debug]         Load.resolveProject(scala-snake-game) took 31.9395ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-snake-game, base: C:\Users\Marks-Desktop\Coding\scala-snake-game, plugins: List(<none>))) took 33.6942ms
[debug] [Loading] Done in C:\Users\Marks-Desktop\Coding\scala-snake-game, returning: (scala-snake-game)
[debug]     Load.loadUnit: loadedProjectsRaw took 86.1114ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.6204ms
[debug]   Load.loadUnit(file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/, ...) took 1764.1574ms
[debug] Load.apply: load took 1789.7115ms
[debug] Load.apply: resolveProjects took 0.0936ms
[debug] Load.apply: finalTransforms took 27.1336ms
[debug] Load.apply: config.delegates took 0.2759ms
[debug] Load.apply: Def.make(settings)... took 67.0593ms
[debug] Load.apply: structureIndex took 27.476ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to scalafx-playground (in build file:/C:/Users/Marks-Desktop/Coding/scala-snake-game/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
